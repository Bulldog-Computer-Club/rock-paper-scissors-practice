{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0","program":"/home/elefant-i3/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","getrandom","--edition=2018","/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"std\"","-C","metadata=4bff1d751c0bd5e6","-C","extra-filename=-4bff1d751c0bd5e6","--out-dir","/home/elefant-i3/Downloads/git/Rust/target/rls/debug/deps","-L","dependency=/home/elefant-i3/Downloads/git/Rust/target/rls/debug/deps","--extern","cfg_if=/home/elefant-i3/Downloads/git/Rust/target/rls/debug/deps/libcfg_if-d5f55fbebdb689a4.rmeta","--extern","libc=/home/elefant-i3/Downloads/git/Rust/target/rls/debug/deps/liblibc-d0d4a253fe4d6247.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/elefant-i3/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/elefant-i3/Downloads/git/Rust/target/rls/debug/deps/libgetrandom-4bff1d751c0bd5e6.rmeta"},"prelude":{"crate_id":{"name":"getrandom","disambiguator":[2733575907190584814,11900908655760108617]},"crate_root":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src","external_crates":[{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[9942249472390543209,15863006584859964888]}},{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[1795893391416169141,8075121191677772249]}},{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[1572415099058457553,2135166978196155506]}},{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","num":4,"id":{"name":"cfg_if","disambiguator":[12588306261731180776,640031727072142967]}},{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error_impls.rs","num":5,"id":{"name":"std","disambiguator":[9744254129402482468,12445345062611050884]}},{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error_impls.rs","num":6,"id":{"name":"alloc","disambiguator":[13603829026942055011,2471063435589406066]}},{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error_impls.rs","num":7,"id":{"name":"libc","disambiguator":[3150535728137067081,14418570958612661587]}},{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error_impls.rs","num":8,"id":{"name":"unwind","disambiguator":[7556171729466642164,9608667095244489899]}},{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error_impls.rs","num":9,"id":{"name":"cfg_if","disambiguator":[10806810126330215714,2553684360462883780]}},{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error_impls.rs","num":10,"id":{"name":"hashbrown","disambiguator":[1818097271180387350,15438349324121503308]}},{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error_impls.rs","num":11,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4437646126609693087,6536018436310544926]}},{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error_impls.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[11991037487279530558,3795792059683432706]}},{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error_impls.rs","num":13,"id":{"name":"addr2line","disambiguator":[1437858958743878161,787253638674005063]}},{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error_impls.rs","num":14,"id":{"name":"gimli","disambiguator":[4592710621585877372,1780610752140463821]}},{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error_impls.rs","num":15,"id":{"name":"object","disambiguator":[6338654217379816643,7168927451833124687]}},{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error_impls.rs","num":16,"id":{"name":"miniz_oxide","disambiguator":[18193432317814560663,14768114254071685082]}},{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error_impls.rs","num":17,"id":{"name":"adler","disambiguator":[12647259490832872807,4960225096531867135]}},{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error_impls.rs","num":18,"id":{"name":"panic_unwind","disambiguator":[8559662747993890479,3650412061717966503]}},{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/util_libc.rs","num":19,"id":{"name":"libc","disambiguator":[1470949092046716866,2951687238319060064]}}],"span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":356,"byte_end":12269,"line_start":9,"line_end":252,"column_start":1,"column_end":17}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":65},"span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":8971,"byte_end":8976,"line_start":168,"line_end":168,"column_start":23,"column_end":28},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":356,"byte_end":12269,"line_start":9,"line_end":252,"column_start":1,"column_end":17},"name":"","qualname":"::","value":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":35},{"krate":0,"index":55},{"krate":0,"index":63},{"krate":0,"index":80},{"krate":0,"index":98},{"krate":0,"index":135},{"krate":0,"index":64}],"decl_id":null,"docs":" Interface to the operating system's random number generator.","sig":null,"attributes":[{"value":"/ Interface to the operating system's random number generator.","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":356,"byte_end":420,"line_start":9,"line_end":9,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":421,"byte_end":424,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Supported targets","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":425,"byte_end":448,"line_start":11,"line_end":11,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":449,"byte_end":452,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ | Target            | Target Triple      | Implementation","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":453,"byte_end":514,"line_start":13,"line_end":13,"column_start":1,"column_end":62}},{"value":"/ | ----------------- | ------------------ | --------------","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":515,"byte_end":576,"line_start":14,"line_end":14,"column_start":1,"column_end":62}},{"value":"/ | Linux, Android    | `*‑linux‑*`        | [`getrandom`][1] system call if available, otherwise [`/dev/urandom`][2] after successfully polling `/dev/random` |","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":577,"byte_end":743,"line_start":15,"line_end":15,"column_start":1,"column_end":163}},{"value":"/ | Windows           | `*‑pc‑windows‑*`   | [`RtlGenRandom`][3] |","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":744,"byte_end":818,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/ | [Windows UWP][22] | `*‑uwp‑windows‑*`  | [`BCryptGenRandom`][23] |","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":819,"byte_end":898,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/ | macOS             | `*‑apple‑darwin`   | [`getentropy()`][19] if available, otherwise [`/dev/random`][20] (identical to `/dev/urandom`)","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":899,"byte_end":1044,"line_start":18,"line_end":18,"column_start":1,"column_end":142}},{"value":"/ | iOS               | `*‑apple‑ios`      | [`SecRandomCopyBytes`][4]","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":1045,"byte_end":1121,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/ | FreeBSD           | `*‑freebsd`        | [`getrandom()`][21] if available, otherwise [`kern.arandom`][5]","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":1122,"byte_end":1234,"line_start":20,"line_end":20,"column_start":1,"column_end":111}},{"value":"/ | OpenBSD           | `*‑openbsd`        | [`getentropy`][6]","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":1235,"byte_end":1301,"line_start":21,"line_end":21,"column_start":1,"column_end":65}},{"value":"/ | NetBSD            | `*‑netbsd`         | [`kern.arandom`][7]","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":1302,"byte_end":1370,"line_start":22,"line_end":22,"column_start":1,"column_end":67}},{"value":"/ | Dragonfly BSD     | `*‑dragonfly`      | [`/dev/random`][8]","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":1371,"byte_end":1439,"line_start":23,"line_end":23,"column_start":1,"column_end":66}},{"value":"/ | Solaris, illumos  | `*‑solaris`, `*‑illumos` | [`getrandom()`][9] if available, otherwise [`/dev/random`][10]","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":1440,"byte_end":1559,"line_start":24,"line_end":24,"column_start":1,"column_end":116}},{"value":"/ | Fuchsia OS        | `*‑fuchsia`        | [`cprng_draw`][11]","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":1560,"byte_end":1628,"line_start":25,"line_end":25,"column_start":1,"column_end":66}},{"value":"/ | Redox             | `*‑cloudabi`       | [`rand:`][12]","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":1629,"byte_end":1691,"line_start":26,"line_end":26,"column_start":1,"column_end":61}},{"value":"/ | CloudABI          | `*‑redox`          | [`cloudabi_sys_random_get`][13]","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":1692,"byte_end":1772,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/ | Haiku             | `*‑haiku`          | `/dev/random` (identical to `/dev/urandom`)","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":1773,"byte_end":1865,"line_start":28,"line_end":28,"column_start":1,"column_end":91}},{"value":"/ | SGX               | `x86_64‑*‑sgx`     | [RDRAND][18]","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":1866,"byte_end":1929,"line_start":29,"line_end":29,"column_start":1,"column_end":60}},{"value":"/ | VxWorks           | `*‑wrs‑vxworks‑*`  | `randABytes` after checking entropy pool initialization with `randSecure`","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":1930,"byte_end":2056,"line_start":30,"line_end":30,"column_start":1,"column_end":121}},{"value":"/ | Emscripten        | `*‑emscripten`     | `/dev/random` (identical to `/dev/urandom`)","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":2057,"byte_end":2149,"line_start":31,"line_end":31,"column_start":1,"column_end":91}},{"value":"/ | WASI              | `wasm32‑wasi`      | [`__wasi_random_get`][17]","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":2150,"byte_end":2224,"line_start":32,"line_end":32,"column_start":1,"column_end":73}},{"value":"/ | Web Browser       | `wasm32‑*‑unknown` | [`Crypto.getRandomValues()`][14], see [WebAssembly support][16]","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":2225,"byte_end":2340,"line_start":33,"line_end":33,"column_start":1,"column_end":111}},{"value":"/ | Node.js           | `wasm32‑*‑unknown` | [`crypto.randomBytes`][15], see [WebAssembly support][16]","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":2341,"byte_end":2449,"line_start":34,"line_end":34,"column_start":1,"column_end":105}},{"value":"/","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":2450,"byte_end":2453,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ There is no blanket implementation on `unix` targets that reads from","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":2454,"byte_end":2526,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"/ `/dev/urandom`. This ensures all supported targets are using the recommended","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":2527,"byte_end":2607,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ interface and respect maximum buffer sizes.","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":2608,"byte_end":2655,"line_start":38,"line_end":38,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":2656,"byte_end":2659,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Pull Requests that add support for new targets to `getrandom` are always welcome.","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":2660,"byte_end":2745,"line_start":40,"line_end":40,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":2746,"byte_end":2749,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ ## Unsupported targets","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":2750,"byte_end":2776,"line_start":42,"line_end":42,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":2777,"byte_end":2780,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ By default, `getrandom` will not compile on unsupported targets, but certain","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":2781,"byte_end":2861,"line_start":44,"line_end":44,"column_start":1,"column_end":81}},{"value":"/ features allow a user to select a \"fallback\" implementation if no supported","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":2862,"byte_end":2941,"line_start":45,"line_end":45,"column_start":1,"column_end":80}},{"value":"/ implementation exists.","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":2942,"byte_end":2968,"line_start":46,"line_end":46,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":2969,"byte_end":2972,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ All of the below mechanisms only affect unsupported","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":2973,"byte_end":3028,"line_start":48,"line_end":48,"column_start":1,"column_end":56}},{"value":"/ targets. Supported targets will _always_ use their supported implementations.","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":3029,"byte_end":3110,"line_start":49,"line_end":49,"column_start":1,"column_end":82}},{"value":"/ This prevents a crate from overriding a secure source of randomness","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":3111,"byte_end":3182,"line_start":50,"line_end":50,"column_start":1,"column_end":72}},{"value":"/ (either accidentally or intentionally).","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":3183,"byte_end":3226,"line_start":51,"line_end":51,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":3227,"byte_end":3230,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ### RDRAND on x86","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":3231,"byte_end":3252,"line_start":53,"line_end":53,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":3253,"byte_end":3256,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ *If the `\"rdrand\"` Cargo feature is enabled*, `getrandom` will fallback to using","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":3257,"byte_end":3341,"line_start":55,"line_end":55,"column_start":1,"column_end":85}},{"value":"/ the [`RDRAND`][18] instruction to get randomness on `no_std` `x86`/`x86_64`","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":3342,"byte_end":3421,"line_start":56,"line_end":56,"column_start":1,"column_end":80}},{"value":"/ targets. This feature has no effect on other CPU architectures.","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":3422,"byte_end":3489,"line_start":57,"line_end":57,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":3490,"byte_end":3493,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ ### WebAssembly support","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":3494,"byte_end":3521,"line_start":59,"line_end":59,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":3522,"byte_end":3525,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ This crate fully supports the","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":3526,"byte_end":3559,"line_start":61,"line_end":61,"column_start":1,"column_end":34}},{"value":"/ [`wasm32-wasi`](https://github.com/CraneStation/wasi) and","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":3560,"byte_end":3621,"line_start":62,"line_end":62,"column_start":1,"column_end":62}},{"value":"/ [`wasm32-unknown-emscripten`](https://www.hellorust.com/setup/emscripten/)","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":3622,"byte_end":3700,"line_start":63,"line_end":63,"column_start":1,"column_end":79}},{"value":"/ targets. However, the `wasm32-unknown-unknown` target is not automatically","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":3701,"byte_end":3779,"line_start":64,"line_end":64,"column_start":1,"column_end":79}},{"value":"/ supported since, from the target name alone, we cannot deduce which","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":3780,"byte_end":3851,"line_start":65,"line_end":65,"column_start":1,"column_end":72}},{"value":"/ JavaScript interface is in use (or if JavaScript is available at all).","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":3852,"byte_end":3926,"line_start":66,"line_end":66,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":3927,"byte_end":3930,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ Instead, *if the `\"js\"` Cargo feature is enabled*, this crate will assume","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":3931,"byte_end":4008,"line_start":68,"line_end":68,"column_start":1,"column_end":78}},{"value":"/ that you are building for an environment containing JavaScript, and will","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":4009,"byte_end":4085,"line_start":69,"line_end":69,"column_start":1,"column_end":77}},{"value":"/ call the appropriate methods. Both web browser (main window and Web Workers)","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":4086,"byte_end":4166,"line_start":70,"line_end":70,"column_start":1,"column_end":81}},{"value":"/ and Node.js environments are supported, invoking the methods","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":4167,"byte_end":4231,"line_start":71,"line_end":71,"column_start":1,"column_end":65}},{"value":"/ [described above](#supported-targets). This crate can be built with either","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":4232,"byte_end":4310,"line_start":72,"line_end":72,"column_start":1,"column_end":79}},{"value":"/ the [wasm-bindgen](https://github.com/rust-lang/rust-bindgen) or","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":4311,"byte_end":4379,"line_start":73,"line_end":73,"column_start":1,"column_end":69}},{"value":"/ [cargo-web](https://github.com/koute/cargo-web) toolchains.","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":4380,"byte_end":4443,"line_start":74,"line_end":74,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":4444,"byte_end":4447,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ This feature has no effect on targets other than `wasm32-unknown-unknown`.","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":4448,"byte_end":4526,"line_start":76,"line_end":76,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":4527,"byte_end":4530,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ ### Custom implementations","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":4531,"byte_end":4561,"line_start":78,"line_end":78,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":4562,"byte_end":4565,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ The [`register_custom_getrandom!`] macro allows a user to mark their own","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":4566,"byte_end":4642,"line_start":80,"line_end":80,"column_start":1,"column_end":77}},{"value":"/ function as the backing implementation for [`getrandom`]. See the macro's","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":4643,"byte_end":4720,"line_start":81,"line_end":81,"column_start":1,"column_end":78}},{"value":"/ documentation for more information about writing and registering your own","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":4721,"byte_end":4798,"line_start":82,"line_end":82,"column_start":1,"column_end":78}},{"value":"/ custom implementations.","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":4799,"byte_end":4826,"line_start":83,"line_end":83,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":4827,"byte_end":4830,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ Note that registering a custom implementation only has an effect on targets","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":4831,"byte_end":4910,"line_start":85,"line_end":85,"column_start":1,"column_end":80}},{"value":"/ that would otherwise not compile. Any supported targets (including those","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":4911,"byte_end":4987,"line_start":86,"line_end":86,"column_start":1,"column_end":77}},{"value":"/ using `\"rdrand\"` and `\"js\"` Cargo features) continue using their normal","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":4988,"byte_end":5063,"line_start":87,"line_end":87,"column_start":1,"column_end":76}},{"value":"/ implementations even if a function is registered.","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":5064,"byte_end":5117,"line_start":88,"line_end":88,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":5118,"byte_end":5121,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ ### Indirect Dependencies","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":5122,"byte_end":5151,"line_start":90,"line_end":90,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":5152,"byte_end":5155,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ If `getrandom` is not a direct dependency of your crate, you can still","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":5156,"byte_end":5230,"line_start":92,"line_end":92,"column_start":1,"column_end":75}},{"value":"/ enable any of the above fallback behaviors by enabling the relevant","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":5231,"byte_end":5302,"line_start":93,"line_end":93,"column_start":1,"column_end":72}},{"value":"/ feature in your root crate's `Cargo.toml`:","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":5303,"byte_end":5349,"line_start":94,"line_end":94,"column_start":1,"column_end":47}},{"value":"/ ```toml","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":5350,"byte_end":5361,"line_start":95,"line_end":95,"column_start":1,"column_end":12}},{"value":"/ [dependencies]","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":5362,"byte_end":5380,"line_start":96,"line_end":96,"column_start":1,"column_end":19}},{"value":"/ getrandom = { version = \"0.2\", features = [\"js\"] }","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":5381,"byte_end":5435,"line_start":97,"line_end":97,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":5436,"byte_end":5443,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":5444,"byte_end":5447,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ## Early boot","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":5448,"byte_end":5465,"line_start":100,"line_end":100,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":5466,"byte_end":5469,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ Sometimes, early in the boot process, the OS has not collected enough","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":5470,"byte_end":5543,"line_start":102,"line_end":102,"column_start":1,"column_end":74}},{"value":"/ entropy to securely seed its RNG. This is especially common on virtual","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":5544,"byte_end":5618,"line_start":103,"line_end":103,"column_start":1,"column_end":75}},{"value":"/ machines, where standard \"random\" events are hard to come by.","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":5619,"byte_end":5684,"line_start":104,"line_end":104,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":5685,"byte_end":5688,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ Some operating system interfaces always block until the RNG is securely","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":5689,"byte_end":5764,"line_start":106,"line_end":106,"column_start":1,"column_end":76}},{"value":"/ seeded. This can take anywhere from a few seconds to more than a minute.","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":5765,"byte_end":5841,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/ A few (Linux, NetBSD and Solaris) offer a choice between blocking and","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":5842,"byte_end":5915,"line_start":108,"line_end":108,"column_start":1,"column_end":74}},{"value":"/ getting an error; in these cases, we always choose to block.","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":5916,"byte_end":5980,"line_start":109,"line_end":109,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":5981,"byte_end":5984,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ On Linux (when the `getrandom` system call is not available), reading from","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":5985,"byte_end":6063,"line_start":111,"line_end":111,"column_start":1,"column_end":79}},{"value":"/ `/dev/urandom` never blocks, even when the OS hasn't collected enough","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":6064,"byte_end":6137,"line_start":112,"line_end":112,"column_start":1,"column_end":74}},{"value":"/ entropy yet. To avoid returning low-entropy bytes, we first poll","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":6138,"byte_end":6206,"line_start":113,"line_end":113,"column_start":1,"column_end":69}},{"value":"/ `/dev/random` and only switch to `/dev/urandom` once this has succeeded.","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":6207,"byte_end":6283,"line_start":114,"line_end":114,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":6284,"byte_end":6287,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ ## Error handling","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":6288,"byte_end":6309,"line_start":116,"line_end":116,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":6310,"byte_end":6313,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ We always choose failure over returning insecure \"random\" bytes. In general,","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":6314,"byte_end":6394,"line_start":118,"line_end":118,"column_start":1,"column_end":81}},{"value":"/ on supported platforms, failure is highly unlikely, though not impossible.","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":6395,"byte_end":6473,"line_start":119,"line_end":119,"column_start":1,"column_end":79}},{"value":"/ If an error does occur, then it is likely that it will occur on every call to","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":6474,"byte_end":6555,"line_start":120,"line_end":120,"column_start":1,"column_end":82}},{"value":"/ `getrandom`, hence after the first successful call one can be reasonably","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":6556,"byte_end":6632,"line_start":121,"line_end":121,"column_start":1,"column_end":77}},{"value":"/ confident that no errors will occur.","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":6633,"byte_end":6673,"line_start":122,"line_end":122,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":6674,"byte_end":6677,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ [1]: http://man7.org/linux/man-pages/man2/getrandom.2.html","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":6678,"byte_end":6740,"line_start":124,"line_end":124,"column_start":1,"column_end":63}},{"value":"/ [2]: http://man7.org/linux/man-pages/man4/urandom.4.html","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":6741,"byte_end":6801,"line_start":125,"line_end":125,"column_start":1,"column_end":61}},{"value":"/ [3]: https://docs.microsoft.com/en-us/windows/desktop/api/ntsecapi/nf-ntsecapi-rtlgenrandom","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":6802,"byte_end":6897,"line_start":126,"line_end":126,"column_start":1,"column_end":96}},{"value":"/ [4]: https://developer.apple.com/documentation/security/1399291-secrandomcopybytes?language=objc","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":6898,"byte_end":6998,"line_start":127,"line_end":127,"column_start":1,"column_end":101}},{"value":"/ [5]: https://www.freebsd.org/cgi/man.cgi?query=random&sektion=4","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":6999,"byte_end":7066,"line_start":128,"line_end":128,"column_start":1,"column_end":68}},{"value":"/ [6]: https://man.openbsd.org/getentropy.2","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":7067,"byte_end":7112,"line_start":129,"line_end":129,"column_start":1,"column_end":46}},{"value":"/ [7]: https://netbsd.gw.com/cgi-bin/man-cgi?sysctl+7+NetBSD-8.0","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":7113,"byte_end":7179,"line_start":130,"line_end":130,"column_start":1,"column_end":67}},{"value":"/ [8]: https://leaf.dragonflybsd.org/cgi/web-man?command=random&section=4","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":7180,"byte_end":7255,"line_start":131,"line_end":131,"column_start":1,"column_end":76}},{"value":"/ [9]: https://docs.oracle.com/cd/E88353_01/html/E37841/getrandom-2.html","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":7256,"byte_end":7330,"line_start":132,"line_end":132,"column_start":1,"column_end":75}},{"value":"/ [10]: https://docs.oracle.com/cd/E86824_01/html/E54777/random-7d.html","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":7331,"byte_end":7404,"line_start":133,"line_end":133,"column_start":1,"column_end":74}},{"value":"/ [11]: https://fuchsia.dev/fuchsia-src/zircon/syscalls/cprng_draw","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":7405,"byte_end":7473,"line_start":134,"line_end":134,"column_start":1,"column_end":69}},{"value":"/ [12]: https://github.com/redox-os/randd/blob/master/src/main.rs","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":7474,"byte_end":7541,"line_start":135,"line_end":135,"column_start":1,"column_end":68}},{"value":"/ [13]: https://github.com/nuxinl/cloudabi#random_get","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":7542,"byte_end":7597,"line_start":136,"line_end":136,"column_start":1,"column_end":56}},{"value":"/ [14]: https://www.w3.org/TR/WebCryptoAPI/#Crypto-method-getRandomValues","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":7598,"byte_end":7673,"line_start":137,"line_end":137,"column_start":1,"column_end":76}},{"value":"/ [15]: https://nodejs.org/api/crypto.html#crypto_crypto_randombytes_size_callback","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":7674,"byte_end":7758,"line_start":138,"line_end":138,"column_start":1,"column_end":85}},{"value":"/ [16]: #webassembly-support","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":7759,"byte_end":7789,"line_start":139,"line_end":139,"column_start":1,"column_end":31}},{"value":"/ [17]: https://github.com/WebAssembly/WASI/blob/master/design/WASI-core.md#__wasi_random_get","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":7790,"byte_end":7885,"line_start":140,"line_end":140,"column_start":1,"column_end":96}},{"value":"/ [18]: https://software.intel.com/en-us/articles/intel-digital-random-number-generator-drng-software-implementation-guide","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":7886,"byte_end":8010,"line_start":141,"line_end":141,"column_start":1,"column_end":125}},{"value":"/ [19]: https://www.unix.com/man-page/mojave/2/getentropy/","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":8011,"byte_end":8071,"line_start":142,"line_end":142,"column_start":1,"column_end":61}},{"value":"/ [20]: https://www.unix.com/man-page/mojave/4/random/","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":8072,"byte_end":8128,"line_start":143,"line_end":143,"column_start":1,"column_end":57}},{"value":"/ [21]: https://www.freebsd.org/cgi/man.cgi?query=getrandom&manpath=FreeBSD+12.0-stable","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":8129,"byte_end":8218,"line_start":144,"line_end":144,"column_start":1,"column_end":90}},{"value":"/ [22]: https://docs.microsoft.com/en-us/windows/uwp/","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":8219,"byte_end":8274,"line_start":145,"line_end":145,"column_start":1,"column_end":56}},{"value":"/ [23]: https://docs.microsoft.com/en-us/windows/win32/api/bcrypt/nf-bcrypt-bcryptgenrandom","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":8275,"byte_end":8368,"line_start":146,"line_end":146,"column_start":1,"column_end":94}},{"value":"no_std","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":8584,"byte_end":8594,"line_start":153,"line_end":153,"column_start":1,"column_end":11}},{"value":"warn(rust_2018_idioms, unused_lifetimes, missing_docs)","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":8595,"byte_end":8653,"line_start":154,"line_end":154,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":65},"span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error.rs","byte_start":13513,"byte_end":13518,"line_start":25,"line_end":25,"column_start":12,"column_end":17},"name":"Error","qualname":"::error::Error","value":"","parent":null,"children":[],"decl_id":null,"docs":" A small and `no_std` compatible error type","sig":null,"attributes":[{"value":"/ A small and `no_std` compatible error type","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error.rs","byte_start":12661,"byte_end":12707,"line_start":10,"line_end":10,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error.rs","byte_start":12708,"byte_end":12711,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ The [`Error::raw_os_error()`] will indicate if the error is from the OS, and","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error.rs","byte_start":12712,"byte_end":12792,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ if so, which error code the OS gave the application. If such an error is","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error.rs","byte_start":12793,"byte_end":12869,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ encountered, please consult with your system documentation.","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error.rs","byte_start":12870,"byte_end":12933,"line_start":14,"line_end":14,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error.rs","byte_start":12934,"byte_end":12937,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Internally this type is a NonZeroU32, with certain values reserved for","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error.rs","byte_start":12938,"byte_end":13012,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/ certain purposes, see [`Error::INTERNAL_START`] and [`Error::CUSTOM_START`].","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error.rs","byte_start":13013,"byte_end":13093,"line_start":17,"line_end":17,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error.rs","byte_start":13094,"byte_end":13097,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ *If this crate's `\"std\"` Cargo feature is enabled*, then:","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error.rs","byte_start":13098,"byte_end":13159,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ - [`getrandom::Error`][Error] implements","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error.rs","byte_start":13160,"byte_end":13204,"line_start":20,"line_end":20,"column_start":1,"column_end":45}},{"value":"/   [`std::error::Error`](https://doc.rust-lang.org/std/error/trait.Error.html)","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error.rs","byte_start":13205,"byte_end":13286,"line_start":21,"line_end":21,"column_start":1,"column_end":82}},{"value":"/ - [`std::io::Error`](https://doc.rust-lang.org/std/io/struct.Error.html) implements","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error.rs","byte_start":13287,"byte_end":13374,"line_start":22,"line_end":22,"column_start":1,"column_end":88}},{"value":"/   [`From<getrandom::Error>`](https://doc.rust-lang.org/std/convert/trait.From.html).","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error.rs","byte_start":13375,"byte_end":13463,"line_start":23,"line_end":23,"column_start":1,"column_end":89}}]},{"kind":"Const","id":{"krate":0,"index":11},"span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error.rs","byte_start":13854,"byte_end":13865,"line_start":35,"line_end":35,"column_start":15,"column_end":26},"name":"UNSUPPORTED","qualname":"::error::Error::UNSUPPORTED","value":"Error","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" This target/platform is not supported by `getrandom`.\n","sig":null,"attributes":[{"value":"/ This target/platform is not supported by `getrandom`.","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error.rs","byte_start":13782,"byte_end":13839,"line_start":34,"line_end":34,"column_start":5,"column_end":62}}]},{"kind":"Const","id":{"krate":0,"index":12},"span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error.rs","byte_start":13977,"byte_end":13995,"line_start":37,"line_end":37,"column_start":15,"column_end":33},"name":"ERRNO_NOT_POSITIVE","qualname":"::error::Error::ERRNO_NOT_POSITIVE","value":"Error","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" The platform-specific `errno` returned a non-positive value.\n","sig":null,"attributes":[{"value":"/ The platform-specific `errno` returned a non-positive value.","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error.rs","byte_start":13898,"byte_end":13962,"line_start":36,"line_end":36,"column_start":5,"column_end":69}}]},{"kind":"Const","id":{"krate":0,"index":13},"span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error.rs","byte_start":14168,"byte_end":14182,"line_start":39,"line_end":39,"column_start":15,"column_end":29},"name":"IOS_SEC_RANDOM","qualname":"::error::Error::IOS_SEC_RANDOM","value":"Error","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" Call to iOS [`SecRandomCopyBytes`](https://developer.apple.com/documentation/security/1399291-secrandomcopybytes) failed.\n","sig":null,"attributes":[{"value":"/ Call to iOS [`SecRandomCopyBytes`](https://developer.apple.com/documentation/security/1399291-secrandomcopybytes) failed.","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error.rs","byte_start":14028,"byte_end":14153,"line_start":38,"line_end":38,"column_start":5,"column_end":130}}]},{"kind":"Const","id":{"krate":0,"index":14},"span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error.rs","byte_start":14360,"byte_end":14382,"line_start":41,"line_end":41,"column_start":15,"column_end":37},"name":"WINDOWS_RTL_GEN_RANDOM","qualname":"::error::Error::WINDOWS_RTL_GEN_RANDOM","value":"Error","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" Call to Windows [`RtlGenRandom`](https://docs.microsoft.com/en-us/windows/win32/api/ntsecapi/nf-ntsecapi-rtlgenrandom) failed.\n","sig":null,"attributes":[{"value":"/ Call to Windows [`RtlGenRandom`](https://docs.microsoft.com/en-us/windows/win32/api/ntsecapi/nf-ntsecapi-rtlgenrandom) failed.","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error.rs","byte_start":14215,"byte_end":14345,"line_start":40,"line_end":40,"column_start":5,"column_end":135}}]},{"kind":"Const","id":{"krate":0,"index":15},"span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error.rs","byte_start":14484,"byte_end":14497,"line_start":43,"line_end":43,"column_start":15,"column_end":28},"name":"FAILED_RDRAND","qualname":"::error::Error::FAILED_RDRAND","value":"Error","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" RDRAND instruction failed due to a hardware issue.\n","sig":null,"attributes":[{"value":"/ RDRAND instruction failed due to a hardware issue.","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error.rs","byte_start":14415,"byte_end":14469,"line_start":42,"line_end":42,"column_start":5,"column_end":59}}]},{"kind":"Const","id":{"krate":0,"index":16},"span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error.rs","byte_start":14595,"byte_end":14604,"line_start":45,"line_end":45,"column_start":15,"column_end":24},"name":"NO_RDRAND","qualname":"::error::Error::NO_RDRAND","value":"Error","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" RDRAND instruction unsupported on this target.\n","sig":null,"attributes":[{"value":"/ RDRAND instruction unsupported on this target.","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error.rs","byte_start":14530,"byte_end":14580,"line_start":44,"line_end":44,"column_start":5,"column_end":55}}]},{"kind":"Const","id":{"krate":0,"index":17},"span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error.rs","byte_start":14708,"byte_end":14718,"line_start":47,"line_end":47,"column_start":15,"column_end":25},"name":"WEB_CRYPTO","qualname":"::error::Error::WEB_CRYPTO","value":"Error","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" The browser does not have support for `self.crypto`.\n","sig":null,"attributes":[{"value":"/ The browser does not have support for `self.crypto`.","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error.rs","byte_start":14637,"byte_end":14693,"line_start":46,"line_end":46,"column_start":5,"column_end":61}}]},{"kind":"Const","id":{"krate":0,"index":18},"span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error.rs","byte_start":14833,"byte_end":14854,"line_start":49,"line_end":49,"column_start":15,"column_end":36},"name":"WEB_GET_RANDOM_VALUES","qualname":"::error::Error::WEB_GET_RANDOM_VALUES","value":"Error","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" The browser does not have support for `crypto.getRandomValues`.\n","sig":null,"attributes":[{"value":"/ The browser does not have support for `crypto.getRandomValues`.","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error.rs","byte_start":14751,"byte_end":14818,"line_start":48,"line_end":48,"column_start":5,"column_end":72}}]},{"kind":"Const","id":{"krate":0,"index":19},"span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error.rs","byte_start":14995,"byte_end":15014,"line_start":51,"line_end":51,"column_start":15,"column_end":34},"name":"VXWORKS_RAND_SECURE","qualname":"::error::Error::VXWORKS_RAND_SECURE","value":"Error","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" On VxWorks, call to `randSecure` failed (random number generator is not yet initialized).\n","sig":null,"attributes":[{"value":"/ On VxWorks, call to `randSecure` failed (random number generator is not yet initialized).","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error.rs","byte_start":14887,"byte_end":14980,"line_start":50,"line_end":50,"column_start":5,"column_end":98}}]},{"kind":"Const","id":{"krate":0,"index":20},"span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error.rs","byte_start":15120,"byte_end":15131,"line_start":53,"line_end":53,"column_start":15,"column_end":26},"name":"NODE_CRYPTO","qualname":"::error::Error::NODE_CRYPTO","value":"Error","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" NodeJS does not have support for the `crypto` module.\n","sig":null,"attributes":[{"value":"/ NodeJS does not have support for the `crypto` module.","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error.rs","byte_start":15048,"byte_end":15105,"line_start":52,"line_end":52,"column_start":5,"column_end":62}}]},{"kind":"Const","id":{"krate":0,"index":21},"span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error.rs","byte_start":15241,"byte_end":15262,"line_start":55,"line_end":55,"column_start":15,"column_end":36},"name":"NODE_RANDOM_FILL_SYNC","qualname":"::error::Error::NODE_RANDOM_FILL_SYNC","value":"Error","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" NodeJS does not have support for `crypto.randomFillSync`.\n","sig":null,"attributes":[{"value":"/ NodeJS does not have support for `crypto.randomFillSync`.","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error.rs","byte_start":15165,"byte_end":15226,"line_start":54,"line_end":54,"column_start":5,"column_end":66}}]},{"kind":"Const","id":{"krate":0,"index":22},"span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error.rs","byte_start":15525,"byte_end":15539,"line_start":60,"line_end":60,"column_start":15,"column_end":29},"name":"INTERNAL_START","qualname":"::error::Error::INTERNAL_START","value":"u32","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" Codes below this point represent OS Errors (i.e. positive i32 values).\n Codes at or above this point, but below [`Error::CUSTOM_START`] are\n reserved for use by the `rand` and `getrandom` crates.\n","sig":null,"attributes":[{"value":"/ Codes below this point represent OS Errors (i.e. positive i32 values).","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error.rs","byte_start":15297,"byte_end":15371,"line_start":57,"line_end":57,"column_start":5,"column_end":79}},{"value":"/ Codes at or above this point, but below [`Error::CUSTOM_START`] are","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error.rs","byte_start":15376,"byte_end":15447,"line_start":58,"line_end":58,"column_start":5,"column_end":76}},{"value":"/ reserved for use by the `rand` and `getrandom` crates.","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error.rs","byte_start":15452,"byte_end":15510,"line_start":59,"line_end":59,"column_start":5,"column_end":63}}]},{"kind":"Const","id":{"krate":0,"index":23},"span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error.rs","byte_start":15672,"byte_end":15684,"line_start":64,"line_end":64,"column_start":15,"column_end":27},"name":"CUSTOM_START","qualname":"::error::Error::CUSTOM_START","value":"u32","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" Codes at or above this point can be used by users to define their own\n custom errors.\n","sig":null,"attributes":[{"value":"/ Codes at or above this point can be used by users to define their own","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error.rs","byte_start":15561,"byte_end":15634,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ custom errors.","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error.rs","byte_start":15639,"byte_end":15657,"line_start":63,"line_end":63,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error.rs","byte_start":16150,"byte_end":16162,"line_start":74,"line_end":74,"column_start":12,"column_end":24},"name":"raw_os_error","qualname":"<Error>::raw_os_error","value":"pub fn raw_os_error(Self) -> Option<i32>","parent":null,"children":[],"decl_id":null,"docs":" Extract the raw OS error code (if this error came from the OS)","sig":null,"attributes":[{"value":"/ Extract the raw OS error code (if this error came from the OS)","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error.rs","byte_start":15720,"byte_end":15786,"line_start":66,"line_end":66,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error.rs","byte_start":15791,"byte_end":15794,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`std::io::Error::raw_os_error()`][1], except","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error.rs","byte_start":15799,"byte_end":15876,"line_start":68,"line_end":68,"column_start":5,"column_end":82}},{"value":"/ that it works in `no_std` contexts. If this method returns `None`, the","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error.rs","byte_start":15881,"byte_end":15955,"line_start":69,"line_end":69,"column_start":5,"column_end":79}},{"value":"/ error value can still be formatted via the `Display` implementation.","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error.rs","byte_start":15960,"byte_end":16032,"line_start":70,"line_end":70,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error.rs","byte_start":16037,"byte_end":16040,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ [1]: https://doc.rust-lang.org/std/io/struct.Error.html#method.raw_os_error","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error.rs","byte_start":16045,"byte_end":16124,"line_start":72,"line_end":72,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error.rs","byte_start":16129,"byte_end":16138,"line_start":73,"line_end":73,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error.rs","byte_start":16535,"byte_end":16539,"line_start":87,"line_end":87,"column_start":18,"column_end":22},"name":"code","qualname":"<Error>::code","value":"pub const fn code(Self) -> NonZeroU32","parent":null,"children":[],"decl_id":null,"docs":" Extract the bare error code.","sig":null,"attributes":[{"value":"/ Extract the bare error code.","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error.rs","byte_start":16328,"byte_end":16360,"line_start":82,"line_end":82,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error.rs","byte_start":16365,"byte_end":16368,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ This code can either come from the underlying OS, or be a custom error.","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error.rs","byte_start":16373,"byte_end":16448,"line_start":84,"line_end":84,"column_start":5,"column_end":80}},{"value":"/ Use [`Error::raw_os_error()`] to disambiguate.","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error.rs","byte_start":16453,"byte_end":16503,"line_start":85,"line_end":85,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error.rs","byte_start":16508,"byte_end":16517,"line_start":86,"line_end":86,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":64},"span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":12072,"byte_end":12081,"line_start":242,"line_end":242,"column_start":8,"column_end":17},"name":"getrandom","qualname":"::getrandom","value":"pub fn getrandom(&mut [u8]) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Fill `dest` with random bytes from the system's preferred random number\n source.","sig":null,"attributes":[{"value":"/ Fill `dest` with random bytes from the system's preferred random number","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":11392,"byte_end":11467,"line_start":229,"line_end":229,"column_start":1,"column_end":76}},{"value":"/ source.","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":11468,"byte_end":11479,"line_start":230,"line_end":230,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":11480,"byte_end":11483,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/ This function returns an error on any failure, including partial reads. We","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":11484,"byte_end":11562,"line_start":232,"line_end":232,"column_start":1,"column_end":79}},{"value":"/ make no guarantees regarding the contents of `dest` on error. If `dest` is","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":11563,"byte_end":11641,"line_start":233,"line_end":233,"column_start":1,"column_end":79}},{"value":"/ empty, `getrandom` immediately returns success, making no calls to the","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":11642,"byte_end":11716,"line_start":234,"line_end":234,"column_start":1,"column_end":75}},{"value":"/ underlying operating system.","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":11717,"byte_end":11749,"line_start":235,"line_end":235,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":11750,"byte_end":11753,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ Blocking is possible, at least during early boot; see module documentation.","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":11754,"byte_end":11833,"line_start":237,"line_end":237,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":11834,"byte_end":11837,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ In general, `getrandom` will be fast enough for interactive usage, though","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":11838,"byte_end":11915,"line_start":239,"line_end":239,"column_start":1,"column_end":78}},{"value":"/ significantly slower than a user-space CSPRNG; for the latter consider","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":11916,"byte_end":11990,"line_start":240,"line_end":240,"column_start":1,"column_end":75}},{"value":"/ [`rand::thread_rng`](https://docs.rs/rand/*/rand/fn.thread_rng.html).","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/lib.rs","byte_start":11991,"byte_end":12064,"line_start":241,"line_end":241,"column_start":1,"column_end":74}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error.rs","byte_start":13770,"byte_end":13775,"line_start":33,"line_end":33,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error.rs","byte_start":17386,"byte_end":17391,"line_start":116,"line_end":116,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":27}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error.rs","byte_start":18046,"byte_end":18051,"line_start":135,"line_end":135,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error.rs","byte_start":18570,"byte_end":18575,"line_start":151,"line_end":151,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/util.rs","byte_start":21206,"byte_end":21215,"line_start":31,"line_end":31,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/util.rs","byte_start":22046,"byte_end":22054,"line_start":56,"line_end":56,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":51},{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error_impls.rs","byte_start":22714,"byte_end":22719,"line_start":14,"line_end":14,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error_impls.rs","byte_start":22964,"byte_end":22969,"line_start":23,"line_end":23,"column_start":28,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/util_libc.rs","byte_start":7289236,"byte_end":7289240,"line_start":80,"line_end":80,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":94},{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/use_file.rs","byte_start":7294194,"byte_end":7294199,"line_start":119,"line_end":119,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/use_file.rs","byte_start":7294572,"byte_end":7294577,"line_start":133,"line_end":133,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/use_file.rs","byte_start":7294642,"byte_end":7294651,"line_start":137,"line_end":137,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error.rs","byte_start":13770,"byte_end":13775,"line_start":33,"line_end":33,"column_start":6,"column_end":11},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":65},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error.rs","byte_start":17386,"byte_end":17391,"line_start":116,"line_end":116,"column_start":21,"column_end":26},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":65},"to":{"krate":1,"index":6555}},{"span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error.rs","byte_start":18046,"byte_end":18051,"line_start":135,"line_end":135,"column_start":23,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":65},"to":{"krate":1,"index":6560}},{"span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error.rs","byte_start":18570,"byte_end":18575,"line_start":151,"line_end":151,"column_start":27,"column_end":32},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":65},"to":{"krate":1,"index":1952}},{"span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/util.rs","byte_start":21206,"byte_end":21215,"line_start":31,"line_end":31,"column_start":6,"column_end":15},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":39},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/util.rs","byte_start":22046,"byte_end":22054,"line_start":56,"line_end":56,"column_start":6,"column_end":14},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":47},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error_impls.rs","byte_start":22714,"byte_end":22719,"line_start":14,"line_end":14,"column_start":26,"column_end":31},"kind":{"Impl":{"id":6}},"from":{"krate":5,"index":2659},"to":{"krate":1,"index":1952}},{"span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/error_impls.rs","byte_start":22964,"byte_end":22969,"line_start":23,"line_end":23,"column_start":28,"column_end":33},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":65},"to":{"krate":5,"index":1720}},{"span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/util_libc.rs","byte_start":7289236,"byte_end":7289240,"line_start":80,"line_end":80,"column_start":6,"column_end":10},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":90},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/use_file.rs","byte_start":7294194,"byte_end":7294199,"line_start":119,"line_end":119,"column_start":6,"column_end":11},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":120},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/use_file.rs","byte_start":7294572,"byte_end":7294577,"line_start":133,"line_end":133,"column_start":22,"column_end":27},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":120},"to":{"krate":1,"index":2046}},{"span":{"file_name":"/home/elefant-i3/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.2.0/src/use_file.rs","byte_start":7294642,"byte_end":7294651,"line_start":137,"line_end":137,"column_start":27,"column_end":36},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":128},"to":{"krate":1,"index":2255}}]}